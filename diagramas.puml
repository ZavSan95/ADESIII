' RESERVAR TURNO

' @startuml
' actor Estudiante
' participant "Sistema EduMatch" as EduMatch
' participant Profesor

' Estudiante -> EduMatch: Buscar profesor
' EduMatch -> Estudiante: Mostrar lista de profesores
' Estudiante -> EduMatch: Seleccionar profesor y programar sesión
' EduMatch -> Profesor: Enviar solicitud de reserva
' Profesor -> EduMatch: Aceptar o rechazar reserva
' EduMatch -> Estudiante: Confirmación de reserva (aceptar o rechazar)

' EduMatch -> Reserva: Crear reserva
' EduMatch -> Estudiante: Notificación de reserva confirmada
' EduMatch -> Profesor: Notificación de reserva confirmada
' @enduml



' @startuml
' actor Estudiante
' participant "Vista Estudiante" as VistaEstudiante
' participant "Controlador Estudiante" as ControladorEstudiante
' participant "Modelo EduMatch" as ModeloEduMatch
' participant "Vista Profesor" as VistaProfesor
' participant "Controlador Profesor" as ControladorProfesor

' Estudiante -> VistaEstudiante: Buscar profesor
' VistaEstudiante -> ControladorEstudiante: Solicitar lista de profesores
' ControladorEstudiante -> ModeloEduMatch: Obtener lista de profesores
' ModeloEduMatch -> ControladorEstudiante: Devolver lista de profesores
' ControladorEstudiante -> VistaEstudiante: Mostrar lista de profesores
' Estudiante -> VistaEstudiante: Seleccionar profesor y programar sesión
' VistaEstudiante -> ControladorEstudiante: Solicitar reserva con profesor seleccionado
' ControladorEstudiante -> ModeloEduMatch: Crear reserva con el profesor seleccionado
' ModeloEduMatch -> ControladorEstudiante: Confirmar reserva
' ControladorEstudiante -> VistaEstudiante: Mostrar confirmación de reserva
' ControladorEstudiante -> ControladorProfesor: Notificar al profesor sobre la reserva
' ControladorProfesor -> VistaProfesor: Mostrar notificación de reserva
' @enduml


' CALIFICAR PROFESOR

' @startuml
' actor Estudiante
' participant "Sistema EduMatch" as EduMatch
' participant Profesor

' Estudiante -> EduMatch: Seleccionar profesor
' EduMatch -> Estudiante: Mostrar perfil del profesor
' Estudiante -> EduMatch: Calificar profesor (enviar reseña y calificación)
' EduMatch -> Profesor: Notificación de nueva calificación
' EduMatch -> EduMatch: Actualizar calificación promedio del profesor

' Estudiante -> EduMatch: Confirmación de calificación
' @enduml

' @startuml

' actor Estudiante
' participant "EstudianteView" as EstudianteView
' participant "EstudianteController" as EstudianteController
' participant "EduMatchModel" as EduMatchModel
' participant "ProfesorView" as ProfesorView
' participant "ProfesorController" as ProfesorController
' participant "ProfesorModel" as ProfesorModel

' Estudiante -> EstudianteView: Seleccionar Profesor
' EstudianteView -> EstudianteController: Solicitar perfil del profesor
' ControllerEstudiante -> EduMatchModel: Obtener perfil del profesor
' EduMatchModel -> EstudianteController: Devolver perfil del profesor
' EstudianteController -> EstudianteView: Mostrar perfil del profesor
' Estudiante -> EstudianteView: Calificar al profesor
' EstudianteView -> EstudianteController: Enviar reseña y calificación
' EstudianteController -> EduMatchModel: Registrar calificación y reseña
' EduMatchModel -> ProfesorController: Notificar nueva calificación
' ProfesorController -> ProfesorModel: Actualizar calificación promedio
' ProfesorModel -> ProfesorController: Confirmar actualización de calificación
' ProfesorController -> EduMatchModel: Confirmación actualización de calificación
' EduMatchModel -> EstudianteView: Confirmación de calificación

' @enduml



' COMPRAR CURSO

' @startuml
' actor Estudiante
' participant "Sistema EduMatch" as EduMatch
' participant Profesor
' participant "Sistema de Pago" as Pago

' Estudiante -> EduMatch: Navegar a sección de cursos
' EduMatch -> Estudiante: Mostrar lista de cursos
' Estudiante -> EduMatch: Seleccionar curso y proceder a compra
' EduMatch -> Pago: Procesar pago (detalles del curso y pago)
' Pago -> EduMatch: Confirmación de pago
' EduMatch -> Estudiante: Confirmación de compra y acceso al curso

' EduMatch -> Profesor: Notificación de venta del curso
' EduMatch -> Curso: Actualizar lista de estudiantes inscritos
' @enduml

' @startuml
' actor Estudiante
' participant "Controlador Estudiante" as ControllerEstudiante
' participant "Vista Estudiante" as ViewEstudiante
' participant "Modelo EduMatch" as ModelEduMatch
' participant "Vista Profesor" as ViewProfesor
' participant "Modelo Profesor" as ModelProfesor
' participant "Vista Pago" as ViewPago
' participant "Modelo Pago" as ModelPago

' Estudiante -> ViewEstudiante: Navegar a la sección de cursos
' ViewEstudiante -> ControllerEstudiante: Solicitar lista de cursos
' ControllerEstudiante -> ModelEduMatch: Obtener lista de cursos
' ModelEduMatch -> ControllerEstudiante: Devolver lista de cursos
' ControllerEstudiante -> ViewEstudiante: Mostrar lista de cursos
' Estudiante -> ViewEstudiante: Seleccionar curso y proceder a compra
' ViewEstudiante -> ControllerEstudiante: Solicitar compra de curso
' ControllerEstudiante -> ModelEduMatch: Procesar compra del curso
' ModelEduMatch -> ModelPago: Procesar pago (detalles del curso y pago)
' ModelPago -> ControllerEstudiante: Confirmación de pago
' ControllerEstudiante -> ViewPago: Mostrar confirmación de pago
' ViewPago -> Estudiante: Confirmación de compra y acceso al curso
' ModelEduMatch -> ModelProfesor: Notificar venta del curso
' ModelEduMatch -> ModelProfesor: Actualizar lista de estudiantes inscritos al curso
' @enduml


' CREAR CUENTA ESTUDIANTE

' @startuml
' actor Estudiante
' participant "Sistema EduMatch" as EduMatch

' Estudiante -> EduMatch: Acceder a la página de registro
' EduMatch -> Estudiante: Mostrar formulario de registro
' Estudiante -> EduMatch: Rellenar formulario y enviar
' EduMatch -> EduMatch: Validar información
' EduMatch -> Estudiante: Confirmación de creación de cuenta
' EduMatch -> Estudiante: Enviar email de verificación
' Estudiante -> Email: Recibir email de verificación
' Estudiante -> EduMatch: Confirmar verificación (clic en enlace)
' EduMatch -> EduMatch: Verificar email y activar cuenta
' EduMatch -> Estudiante: Cuenta activada y bienvenida
' @enduml

' @startuml
' actor Estudiante
' participant "Controlador Estudiante" as ControllerEstudiante
' participant "Vista Estudiante" as ViewEstudiante
' participant "Modelo EduMatch" as ModelEduMatch
' participant "Vista Email" as ViewEmail
' participant "Modelo Email" as ModelEmail

' Estudiante -> ViewEstudiante: Acceder a la página de registro
' ViewEstudiante -> ControllerEstudiante: Solicitar formulario de registro
' ControllerEstudiante -> ModelEduMatch: Obtener formulario de registro
' ModelEduMatch -> ControllerEstudiante: Devolver formulario de registro
' ControllerEstudiante -> ViewEstudiante: Mostrar formulario de registro
' Estudiante -> ViewEstudiante: Rellenar y enviar formulario
' ViewEstudiante -> ControllerEstudiante: Enviar formulario de registro
' ControllerEstudiante -> ModelEduMatch: Validar información
' ModelEduMatch -> ControllerEstudiante: Confirmación de creación de cuenta
' ControllerEstudiante -> ViewEstudiante: Mostrar confirmación de creación de cuenta
' ControllerEstudiante -> ViewEmail: Enviar correo de verificación
' ViewEmail -> Estudiante: Recibir correo de verificación
' Estudiante -> ViewEmail: Confirmar verificación (hacer clic en el enlace)
' ViewEmail -> ModelEduMatch: Confirmar verificación de correo y activar cuenta
' ModelEduMatch -> ControllerEstudiante: Cuenta activada y mensaje de bienvenida
' @enduml


' SUBIR CURSO

' @startuml
' actor Profesor
' participant "Sistema EduMatch" as EduMatch

' Profesor -> EduMatch: Acceder a la sección de subir curso
' EduMatch -> Profesor: Mostrar formulario para nuevo curso
' Profesor -> EduMatch: Rellenar y enviar detalles del curso
' EduMatch -> EduMatch: Validar detalles del curso
' EduMatch -> Profesor: Confirmación de curso subido

' EduMatch -> Curso: Guardar detalles del curso
' EduMatch -> Estudiantes: Notificar nuevo curso disponible (opcional)
' @enduml

' @startuml
' actor Profesor
' participant "Controlador Profesor" as ControllerProfesor
' participant "Vista Profesor" as ViewProfesor
' participant "Modelo EduMatch" as ModelEduMatch
' participant "Modelo Curso" as ModelCurso
' participant "Vista Estudiantes" as ViewEstudiantes

' Profesor -> ViewProfesor: Acceder a la sección de subir curso
' ViewProfesor -> ControllerProfesor: Solicitar formulario para nuevo curso
' ControllerProfesor -> ModelEduMatch: Obtener formulario para nuevo curso
' ModelEduMatch -> ControllerProfesor: Devolver formulario para nuevo curso
' ControllerProfesor -> ViewProfesor: Mostrar formulario para nuevo curso
' Profesor -> ViewProfesor: Rellenar y enviar detalles del curso
' ViewProfesor -> ControllerProfesor: Enviar detalles del curso
' ControllerProfesor -> ModelEduMatch: Validar detalles del curso
' ModelEduMatch -> ControllerProfesor: Confirmación de curso subido
' ControllerProfesor -> ModelCurso: Guardar detalles del curso
' ModelEduMatch -> ViewEstudiantes: Notificar disponibilidad del nuevo curso (opcional)
' @enduml

' RECUPERAR PASSWORD

' @startuml
' actor Estudiante
' participant "Sistema EduMatch" as EduMatch
' participant "Email" as Email

' Estudiante -> EduMatch: Solicitar recuperación de contraseña
' EduMatch -> Estudiante: Pedir email de registro
' Estudiante -> EduMatch: Proveer email de registro
' EduMatch -> EduMatch: Validar email
' EduMatch -> Email: Enviar enlace de recuperación de contraseña
' Estudiante -> Email: Recibir email con enlace
' Estudiante -> EduMatch: Clic en enlace y acceder a página de nueva contraseña
' EduMatch -> Estudiante: Mostrar formulario de nueva contraseña
' Estudiante -> EduMatch: Rellenar y enviar nueva contraseña
' EduMatch -> EduMatch: Validar y actualizar contraseña
' EduMatch -> Estudiante: Confirmación de contraseña actualizada
' @enduml

@startuml
actor Estudiante
participant "Controlador Estudiante" as ControllerEstudiante
participant "Vista Estudiante" as ViewEstudiante
participant "Modelo EduMatch" as ModelEduMatch
participant "Vista Email" as ViewEmail
participant "Modelo Email" as ModelEmail

Estudiante -> ViewEstudiante: Solicitar recuperación de contraseña
ViewEstudiante -> ControllerEstudiante: Solicitar correo de registro
ControllerEstudiante -> ModelEduMatch: Obtener correo de registro
ModelEduMatch -> ControllerEstudiante: Devolver correo de registro
ControllerEstudiante -> ViewEstudiante: Solicitar correo de registro
Estudiante -> ViewEstudiante: Proporcionar correo de registro
ViewEstudiante -> ControllerEstudiante: Enviar correo de registro
ControllerEstudiante -> ModelEduMatch: Validar correo de registro
ModelEduMatch -> ViewEmail: Enviar enlace de recuperación de contraseña
ViewEmail -> Estudiante: Recibir correo con enlace
Estudiante -> ViewEmail: Hacer clic en el enlace y acceder a la página de nueva contraseña
ViewEmail -> ControllerEstudiante: Solicitar formulario de nueva contraseña
ControllerEstudiante -> ModelEduMatch: Obtener formulario de nueva contraseña
ModelEduMatch -> ControllerEstudiante: Devolver formulario de nueva contraseña
ControllerEstudiante -> ViewEstudiante: Mostrar formulario de nueva contraseña
Estudiante -> ViewEstudiante: Rellenar y enviar nueva contraseña
ViewEstudiante -> ControllerEstudiante: Enviar nueva contraseña
ControllerEstudiante -> ModelEduMatch: Validar y actualizar contraseña
ModelEduMatch -> ControllerEstudiante: Confirmación de contraseña actualizada
ControllerEstudiante -> ViewEstudiante: Mostrar confirmación de contraseña actualizada

@enduml